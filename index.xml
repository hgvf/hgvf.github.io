<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Weiwei 的 Blog</title>
    <link>https://hgvf.github.io/</link>
    <description>Recent content on Weiwei 的 Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 26 Nov 2023 01:33:25 +0800</lastBuildDate>
    <atom:link href="https://hgvf.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SpeechBrain</title>
      <link>https://hgvf.github.io/posts/speechbrain/</link>
      <pubDate>Sun, 26 Nov 2023 01:33:25 +0800</pubDate>
      <guid>https://hgvf.github.io/posts/speechbrain/</guid>
      <description>參考網站 https://speechbrain.github.io (SpeechBrain 官網) https://github.com/speechbrain/speechbrain (SpeechBrain github) https://speechbrain.readthedocs.io/en/latest/index.html (Speechbrain docs)
YAML file speechbrain 中會使用到 &amp;ldquo;.yaml&amp;rdquo; 類型檔案來定義不同的參數，例如訓練的 hparams、模型架構等等。
tags: 新增一個 python object: new (ex. LogSoftmax) log_softmax: !new: torch.nn.LogSoftmax dim: -1 新增一個 function object: name (ex. seq_cost) seq_cost: !name: speechbrain.nnet.losses.kldiv_loss label_smoothing: &amp;lt;label_smoothing&amp;gt; 取用 yaml file 其他變數的值: ref (ex. SGD) SGD: !name: torch.optim.SGD lr: !ref &amp;lt;lr_sgd&amp;gt; 複製一份 variable or object，且不會有相同 reference: copy apple: !copy &amp;lt;foo&amp;gt; Include 其他的 yaml file: include 讀取 &amp;amp; 執行其他的 python function: apply (ex.</description>
    </item>
    <item>
      <title>ESPnet 安裝記錄</title>
      <link>https://hgvf.github.io/posts/espnet/</link>
      <pubDate>Sun, 26 Nov 2023 01:33:07 +0800</pubDate>
      <guid>https://hgvf.github.io/posts/espnet/</guid>
      <description>參考網站 https://espnet.github.io/espnet/installation.html (ESPNet 官網)
安裝 Kaldi Git clone Kaldi $ cd &amp;lt;要安裝的位置&amp;gt; $ git clone https://github.com/kaldi-asr/kaldi Install tools $ cd &amp;lt;kaldi-root&amp;gt;/tools $ make -j &amp;lt;NUM_CPU&amp;gt; (在 lab 時候 &amp;lt;NUM_CPU&amp;gt; 可以用 32。)
使用 OpenBLAS 安裝 BLAS libraries $ cd &amp;lt;kaldi-root&amp;gt;/tools $ ./extras/install_openblas.sh 檢查有沒有 tools 缺漏 $ ./extras/check_dependencies.sh (有缺漏就按照指示裝，沒有的話會顯示 all ok)
Compile &amp;amp; install Kaldi $ cd &amp;lt;kaldi-root&amp;gt;/src $ ./configure --use-cuda=no $ make -j clean depend $ make -j &amp;lt;NUM_CPU&amp;gt; </description>
    </item>
    <item>
      <title>Earthworm</title>
      <link>https://hgvf.github.io/posts/earthworm/</link>
      <pubDate>Sun, 26 Nov 2023 01:30:46 +0800</pubDate>
      <guid>https://hgvf.github.io/posts/earthworm/</guid>
      <description>基本觀念 參數檔案存在 /params (ex. earthworm.d)。 執行檔存在 /bin。 startstop.d: 告訴 earthworm 目前有多少 ring, module&amp;hellip;。 earthworm.d: 定義 ring 名稱、代號，以及 modules, message type&amp;hellip;。 earthworm_global.d: 定義機構代號、 指令 啟動 earthworm 系統 $ source ew_linux_xxx.bash # 啟動 earthworm system $ startstop # 如果有新增的模組，在不關掉 earthworm 系統之下匯入模組 $ recon sniffwave: 主要查看某個 RING 收到的資料 $ sniffwave XXX_RING # only station header # sniffwave &amp;lt;RING_NAME&amp;gt; &amp;lt;Station&amp;gt; &amp;lt;CNL&amp;gt; &amp;lt;TW?&amp;gt; -- n $ sniffwave WAVE_RING TWGB BHE TW -- n # only station waveforms # sniffwave &amp;lt;RING_NAME&amp;gt; &amp;lt;Station&amp;gt; &amp;lt;CNL&amp;gt; &amp;lt;TW?</description>
    </item>
    <item>
      <title>Anaconda</title>
      <link>https://hgvf.github.io/posts/anaconda/</link>
      <pubDate>Sun, 26 Nov 2023 01:28:47 +0800</pubDate>
      <guid>https://hgvf.github.io/posts/anaconda/</guid>
      <description>安裝 參考網站: https://ithelp.ithome.com.tw/articles/10237621
指令 看已建立的所有環境 conda env list 建立環境 conda create --name &amp;lt;env_name&amp;gt; python=&amp;lt;python version&amp;gt; 啟動環境 conda activate &amp;lt;env_name&amp;gt; 安裝套件 conda install &amp;lt;package&amp;gt; 退出環境 conda deactivate 刪除環境 conda env remove --name &amp;lt;env_name&amp;gt; 看已安裝套件 conda list </description>
    </item>
    <item>
      <title>Pyenv</title>
      <link>https://hgvf.github.io/posts/pyenv/</link>
      <pubDate>Sun, 26 Nov 2023 01:26:56 +0800</pubDate>
      <guid>https://hgvf.github.io/posts/pyenv/</guid>
      <description>參考網站 https://github.com/pyenv/pyenv#installation https://github.com/pyenv/pyenv-installer
相關檔案 Shims 安裝之後會被加入到 PATH 當中。 主要用來執行 user 呼叫的 python 相關指令，例如 pip, python&amp;hellip;。 指令的參數也都會被傳給 pyenv 執行。 Versions 放置所有下載的 python 版本。 plugins 存放 pyenv 相關插件，例如 pyenv-virtualenv&amp;hellip;。 pyenv-virtualenv 用來管理 virtualenv 創建的虛擬環境等等。 如何選擇 python 版本 (照以下順序) 使用 PYENV_VERSION 的環境變數，這個變數可以使用 &amp;ldquo;pyenv shell &amp;quot; 指令來設置。 如果目前目錄底下的 .python-version 存在，則可以用 &amp;ldquo;pyenv shell&amp;rdquo; 來修改。 會不斷往 parent 目錄尋找 .python-version，直到搜尋到檔案系統的 root。 依照 Global 的 $(pyenv root)/version 檔案，可以用 &amp;ldquo;pyenv global&amp;rdquo; 來修改。 (如果 global version file 不存在，則 pyenv 會假設你希望用系統內建的 python) 安裝教學 安裝 pyenv: curl https://pyenv.</description>
    </item>
    <item>
      <title>Attention is All You Need</title>
      <link>https://hgvf.github.io/posts/transformer/</link>
      <pubDate>Sun, 26 Nov 2023 00:52:32 +0800</pubDate>
      <guid>https://hgvf.github.io/posts/transformer/</guid>
      <description>https://arxiv.org/pdf/1706.03762.pdf
Model architecture:
(1) 每個 sub-layer 過後都會經過 **layer normalization**，讓 input 的 mean=0, variance=1，讓資料都投影到差不多的 range，可以提升 training 效率。 (2) 任兩個 sub-layers 間都使用 **residual connection**，在做 backpropagation 時可以使梯度不要爆炸或消失，也不會使 information 完全由 layer 決定，而是多參考初始狀態。 (3) 經過完每個 sub-layer 之後，在 residual connection &amp;amp; layer normalization 之前，會先 dropout(0.1)，甚至是 input embedding 也會經過 dropout。 (4) 使用 37k 大小的字典做 byte-pair encoding。 (5) 最終結果是用倒數 10 個 checkpoints 的 model weights 作 average。 (6) Label smoothing=0.1。 Attention: (1) Scaled Dot-Production attention: $Attention(Q, K, V)=softmax(\frac{QK^T}{\sqrt[]{d_k}})V$ (2) Multi-head attention: $MultiHead(Q, K, V)=Concat(head_1, .</description>
    </item>
    <item>
      <title>TodoList</title>
      <link>https://hgvf.github.io/posts/todolist/</link>
      <pubDate>Sat, 25 Nov 2023 02:17:34 +0800</pubDate>
      <guid>https://hgvf.github.io/posts/todolist/</guid>
      <description>網站未來新增:
技術文件 論文筆記 課程筆記 旅遊 美食 景點 履歷 一些事的心得 一些雜事的處理 SOP 踩過的雷 股市 汽車 </description>
    </item>
  </channel>
</rss>
